47. Emacs in background doesn't work

- Run emacs
- Ctrl-Z

Goes to background, but bg and fg do not revive it.

Complete "help interaction" when this is working.

As of about June 9, job control works on the console, but emacs never
suspends, and in fact it is no longer owned by the marcel
process. Exiting marcel leaves emacs running.

----------------------------------------------------------------------

58. Infinite loop in help

There was a typo in the HELP for ps:

HELP = '''
{L,wrap=F}ps [-u|--user [USER]] [-g|--group [GROUP}] [-p|--pid PID] [-c|--command STRING]

tNote that GROUP is followed by } instead of ]. That seemed to put 
help into an infinite loop.

----------------------------------------------------------------------

66. Parsing error due to whitespace

M-0.9.15 jao@cheese:~/git/marcel$ gen 3 | map(x: x+1)
Error: Running map(lambda: f'''map{x: x+1}''') on (0,): <lambda>() takes 0 positional arguments but 1 was given
Error: Running map(lambda: f'''map{x: x+1}''') on (1,): <lambda>() takes 0 positional arguments but 1 was given
Error: Running map(lambda: f'''map{x: x+1}''') on (2,): <lambda>() takes 0 positional arguments but 1 was given

Lexer.consolidate_tokens consolidates map and (...

IS THIS A BUG?

We want consolidation here:

   ls map(3)

which runs "ls map3"

----------------------------------------------------------------------

89. Be able to execute marcel script from inside marcel

Don't require use of host shell.
    
----------------------------------------------------------------------

95. emacs no longer working

Specific to root.

M-0.10.13 root@cheese:/media/backup/daily/2020.08.26# emacs
emacs: Could not open file: /dev/tty
Escaped command failed with exit code 1: emacs
None

----------------------------------------------------------------------

97. ... | args [n: sql 'insert ... values(%s) (n)' does, essentially, autocommit

The problem is that each invocation of the pipeline does sql setup, receive, receive_complete.

----------------------------------------------------------------------

108. quote_files is failing, but only through the API?!

This fails, in test_api:

    TEST.run(test=lambda: run(ls('/tmp/a', file=True) |
                              args(lambda files: bash(f'mv -t d {quote_files(files)}'), all=True)),
             verification=lambda: run(ls('d', file=True) | map(lambda f: f.name)),
             expected_out=['a file', "a file with a ' mark", 'a_file'])

the quoted files are messed up, mv -t d ... fails. The command passed to bash is:

    mv -t d '/tmp/a/a file' '/tmp/a/a file with a '"'"' mark' /tmp/a/a_file

But somehow the quote marks get escaped, I think. Test is disabled for now.

The equivalent test in test_ops succeeds!?!?!?!

----------------------------------------------------------------------

113. Farcel error reporting is broken

ls /nosuchfile: Generates an error
@jao [ls /nosuchfile]: Error message shows up as output (see test_api test_remote)

Need to review how errors and exceptions are reported from farcel.

----------------------------------------------------------------------

114. Ctrl-C doesn't clean up temp file

- gen 10000000 >$ x
- ctrl-c while it's running

The env var isn't there, but the temp file is.

And what about gen ... >>$ x

......................................................................

"env -d x": deletes the var, leaves the reservoir.

......................................................................

gen 3 >$ x
gen 0 >>$ x
<ctrl c>

x still exists, but it has corrupt pickle data. The ctrl-c doesn't
close the file.

Store.cleanup not called on ctrl-c.

- Track reservoirs being written
- ctrl c handler: Close reservoirs

----------------------------------------------------------------------

128. Tab completion vs. syntactic sugar

For "var > ..." or "./file > ...", tab completion doesn't work. Tab
completion for first symbol expects executable.

----------------------------------------------------------------------

137. Why are there excess tokens?

ls *.{py,txt}
[ls(depth=recursive, include=, filename=?)] followed by excess tokens: Comma(,), String(txt})

{} should be part of the FILENAME

Because comma is parsed.

----------------------------------------------------------------------

144. Use of colon in a bash command is problematic

COLON is a Lexer token.

M 0.11.12 jao@cheese:~$ bash scp ~/.marcel.py jorenstein@nd:/home/jorenstein
[bash(args=None)] followed by excess tokens: Colon(:), String(/home/jorenstein)

----------------------------------------------------------------------

148. psql doesn't work when it needs a password:

    M 0.11.12 jao@cheese ~/consulting/nasuni/analytics/load_simulation$ bash psql nasuni < schema.sql
    Password for user jao: 
    psql: error: FATAL:  password authentication failed for user "jao"
    Escaped command failed with exit code 2: psql nasuni < schema.sql
    None
    M 0.11.12 jao@cheese ~/consulting/nasuni/analytics/load_simulation$ bash -i psql nasuni < schema.sql
    Password for user jao: 
    psql: error: FATAL:  password authentication failed for user "jao"
    Escaped command failed with exit code 2: psql nasuni < schema.sql
    None

----------------------------------------------------------------------

149. Field widths don't adapt well

M 0.11.12 jao@cheese ~/consulting/nasuni/analytics/load_simulation$ ls
drwxrwxr-x   jao    jao        4096   2020 Nov 19 13:49:28   .
drwxrwxr-x   jao    jao        4096   2020 Nov 19 13:49:27   .idea
-rw-rw-r--   jao    jao    4786675634   2020 Nov 19 13:50:33   1day.csv
-rw-rw-r--   jao    jao        1908   2020 Nov 19 13:49:27   main.py
-rw-rw-r--   jao    jao        2845   2020 Nov 19 12:40:01   notes.txt
-rw-rw-r--   jao    jao        2446   2020 Nov 19 12:52:23   schema.sql
drwxrwxr-x   jao    jao        4096   2020 Nov 19 11:27:25   venv

----------------------------------------------------------------------

159. sql query with string literal confuses the driver

    M 0.12.5 jao@cheese ~/git/marcel$ sql "select * from s where s like '%a%'"
    list index out of range

Is the problem the %?

----------------------------------------------------------------------

171. Running python doesn't work

jao@cheese:~$ marcel
M 0.13.6 jao@cheese ~$ python
M 0.13.6 jao@cheese ~$ 

----------------------------------------------------------------------

172. Args to bash are interpreted as belonging to marcel

M 0.13.6 jao@cheese ~$ bash ssh -l jao -i /home/jao/.ssh/id_rsa 127.0.0.1 'ls /tmp'
Operator bash: Flags must all appear before the first anonymous arg

----------------------------------------------------------------------

173. Creating config directories may need to create paths

E.g. .local/share might not be present.

----------------------------------------------------------------------

174. Error shouldn't result in stacks being printed

M 0.13.8 jao@cheese ~$ fork jao [host: ((host.cluster.name, host, host.cluster.user))]
Error: Running map(lambda: (host.cluster.name, host, host.cluster.user)): 'Cluster' object has no attribute 'name'
Caught <class 'marcel.exception.KillAndResumeException'>: 'Cluster' object has no attribute 'name'
  File "/home/jao/git/marcel/marcel/op/fork.py", line 219, in run_pipeline_in_child
    self.pipeline_wrapper.run_pipeline([self.thread_id])
  File "/home/jao/git/marcel/marcel/core.py", line 548, in run_pipeline
    marcel.core.Command(env, None, self.pipeline).execute()
  File "/home/jao/git/marcel/marcel/core.py", line 263, in execute
    self.pipeline.run()
  File "/home/jao/git/marcel/marcel/core.py", line 417, in run
    self.ops[0].run()
  File "/home/jao/git/marcel/marcel/op/map.py", line 67, in run
    self.send(self.call(self.function))
  File "/home/jao/git/marcel/marcel/core.py", line 100, in call
    self.fatal_error(args_description, str(e))
  File "/home/jao/git/marcel/marcel/core.py", line 151, in fatal_error
    raise marcel.exception.KillAndResumeException(message)
Process Process-10:
Traceback (most recent call last):
  File "/usr/lib/python3.9/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/usr/lib/python3.9/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jao/git/marcel/marcel/job.py", line 147, in run_command_in_child
    child_namespace_changes = command.execute(self.env)
  File "/home/jao/git/marcel/marcel/core.py", line 263, in execute
    self.pipeline.run()
  File "/home/jao/git/marcel/marcel/core.py", line 417, in run
    self.ops[0].run()
  File "/home/jao/git/marcel/marcel/op/fork.py", line 167, in run
    worker.wait()
  File "/home/jao/git/marcel/marcel/op/fork.py", line 235, in wait
    x = dill.loads(input)
  File "/usr/local/lib/python3.9/dist-packages/dill/_dill.py", line 387, in loads
    return load(file, ignore, **kwds)
  File "/usr/local/lib/python3.9/dist-packages/dill/_dill.py", line 373, in load
    return Unpickler(file, ignore=ignore, **kwds).load()
  File "/usr/local/lib/python3.9/dist-packages/dill/_dill.py", line 646, in load
    obj = StockUnpickler.load(self)
TypeError: __init__() missing 1 required positional argument: 'error'
M 0.13.8 jao@cheese ~$ 

----------------------------------------------------------------------

175. Crash on upgrade

I just installed 0.13.8 on geophile.com and started marcel:

[ec2-user@ip-172-31-29-105 ~]$ marcel
Traceback (most recent call last):
  File "/usr/lib64/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib64/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/ec2-user/.local/lib/python3.6/site-packages/marcel/main.py", line 296, in <module>
    MAIN = Main(None, same_process=False, old_namespace=old_namespace)
  File "/home/ec2-user/.local/lib/python3.6/site-packages/marcel/main.py", line 97, in __init__
    self.env = marcel.env.Environment.new(config_file, old_namespace)
  File "/home/ec2-user/.local/lib/python3.6/site-packages/marcel/env.py", line 215, in new
    env.config_path = env.read_config(config_file)
  File "/home/ec2-user/.local/lib/python3.6/site-packages/marcel/env.py", line 330, in read_config
    config_path = self.locations.config_path()
  File "/home/ec2-user/.local/lib/python3.6/site-packages/marcel/locations.py", line 13, in config_path
    return self._dir('XDG_CONFIG_HOME', '.config') / 'startup.py'
  File "/home/ec2-user/.local/lib/python3.6/site-packages/marcel/locations.py", line 34, in _dir
    dir.mkdir(exist_ok=False)
  File "/usr/lib64/python3.6/pathlib.py", line 1248, in mkdir
    self._accessor.mkdir(self, mode)
  File "/usr/lib64/python3.6/pathlib.py", line 387, in wrapped
    return strfunc(str(pathobj), *args)
FileNotFoundError: [Errno 2] No such file or directory: '/home/ec2-user/.config/marcel'
[ec2-user@ip-172-31-29-105 ~]$ 

----------------------------------------------------------------------

176. Remote error not showing up correctly

From test_api:

    # TODO: Bug - should be expected_err
    TEST.run(lambda: run(fork('jao', ls('/nosuchfile'))),
             expected_out=[Error('No qualifying paths')])
             # expected_err='No qualifying paths')

----------------------------------------------------------------------

177. Tab completion for filename doesn't add quotes or otherwise escape filenames

----------------------------------------------------------------------

178. Cannot start without internet

No internet, started marcel:

jao@cheese:~$ marcel
Cannot start marcel: Cannot understand geophile.com as a host name or as an IP address.

Should complain when the cluster is actually used.

----------------------------------------------------------------------

179. Fix references to ~/.marcel.py in help

----------------------------------------------------------------------

180. bash command doesn't work in marcel

M 0.13.9 jao@cheese /tmp$ touch source/{a,b,c}
[bash(args=['touch', 'source/{a'])] followed by excess tokens: Comma(,), String(b), Comma(,), String(c})

----------------------------------------------------------------------

181. help cluster is missing

Referenced in "help upload".

----------------------------------------------------------------------

183. Remote execution failing

    M 0.13.10 jao@cheese ~$ @all [ gen 3 ]
    (localhost, 0)
    (localhost, 1)
    (localhost, 2)
    Traceback (most recent call last):
      File "/usr/local/bin/farcel.py", line 219, in <module>
        main()
      File "/usr/local/bin/farcel.py", line 205, in main
        signal_id = input.load()
      File "/usr/local/lib/python3.9/site-packages/dill/_dill.py", line 646, in load
        obj = StockUnpickler.load(self)
    _pickle.UnpicklingError: unpickling stack underflow

On remote (acme), farcel.log says:

    10727 MainThread: Caught <class 'TypeError'>: code() takes at most 16 arguments 
    (19 given)
    Caught <class 'TypeError'>: code() takes at most 16 arguments (19 given)
      File "/usr/local/bin/farcel.py", line 186, in main
        env = input.load()
      File "/usr/local/lib/python3.9/site-packages/dill/_dill.py", line 646, in load
        obj = StockUnpickler.load(self)
      File "/usr/local/lib/python3.9/site-packages/dill/_dill.py", line 805, in _cre
    ate_code
        return CodeType(args[0], 0, 0, *args[1:])
    10727 MainThread: Exiting

----------------------------------------------------------------------

186. Embedded expr not evaluated in API

E.g. in test_ls:

    TEST.env.setvar('TEST', 'test')
    TEST.run(test=lambda: run(ls('/tmp/(TEST)', recursive=True) | map(lambda f: f.render_compact())),
             expected_out=sorted(['.',
                                  'f', 'sf', 'lf', 'sd', 'd',  # Top-level
                                  'd/df', 'd/sdf', 'd/ldf', 'd/dd', 'd/sdd',  # Contents of d
                                  'sd/df', 'sd/sdf', 'sd/ldf', 'sd/dd', 'sd/sdd',  # Also reachable via sd
                                  'd/dd/ddf', 'd/sdd/ddf', 'sd/dd/ddf', 'sd/sdd/ddf'  # All paths to ddf
                                  ]))

'/tmp/(TEST)' gets parsed properly in interactive usage. In API, the
command line isn't parsed, so the expression isn't parsed, and the
variable is not expanded. SHOULD IT BE? 

Need to decide if env vars are in an Env object, or whether they are
simply program variables. If it's the latter, then a correct
formulation is

    ls(f'/tmp/{TEST}', ...

[After thinking about it for a while]

Program variables and environment variables are different. Using
f'/tmp/{TEST}' is a reasonable approximation of '/tmp/(TEST)', but
isn't a substitute. Program variables are part of Python, and not
available on the marcel command line. Environment variables are part
of marcel, and should be available through marcel.api.

----------------------------------------------------------------------

188. Marcel crashes on first startup if config directories are missing

~/.config and ~/.local/share are assumed. geophile.com didn't have
them, and in face, does not have XDG vars set. Makes sense for a
server, I guess. What is the Linuxy thing to do in this case?

----------------------------------------------------------------------

189. Auto-complete doesn't handle whitespace correctly

Should quote or insert escapes.

Problems:

1.

        touch "xxxx yyyy"
        ls "xxx
        
    autocompletes to:

        ls "xxxx yyyy "

    -> extra space at end. This is correct WITHOUT the 2nd quote,
       since we've unambiguously completed an actual filename. I.e.,
       the space should be after the quote.

2. 

        ls xxx

    autocompletes to

        ls xxxx yyyy

    -> Needs escape or quotes

----------------------------------------------------------------------

191. Protect env from deletion

(dup of 85)

Don't allow deletion of some symbols. Which ones? COLOR_SCHEME is one example.

----------------------------------------------------------------------

192. Native command output loses ANSI escape codes

Example:

M 0.14.1 jao@cheese ~/git/marcel/test$ git branch
  bug189
* bug190
  master
M 0.14.1 jao@cheese ~/git/marcel/test$ bash
jao@cheese:~/git/marcel/test$ git branch
  bug189
* bug190
  master

bash command output is colorized, marcel command output is not.

----------------------------------------------------------------------

194. {...} not handled consistently (from a bash point of view)

{} are not glob characters, they are bash characters. So

    grep asdf a{1,2}*

works, since this is evaluated by bash.

But 

    ls a{1,2}*

does not work, because ls is a marcel op, and marcel doesn't support
{}.

----------------------------------------------------------------------

207. fork op handling cluster names incorrectly

@ works for an unknown cluster, fork does not. Treats the string as an
iterable and runs the pipeline len(string) times.

M 0.17.3 jao@cheese ~$ @asdf (| gen 3 |)
Operator remote: asdf is not a Cluster
M 0.17.3 jao@cheese ~$ fork asdf (| gen 3 |)
0
1
2
0
1
2
0
1
2
0
1
2

----------------------------------------------------------------------

209: Farcel crashes if ~/.config/marcel doesn't exist

----------------------------------------------------------------------

214: Tab completion broken for files starting with ~

Can complete the username, but nothing after it, e.g.

    ~jao/t

----------------------------------------------------------------------

216. Tab completion includes spaces in filenames without quoting

----------------------------------------------------------------------

217. Native executables vs. filenames with spaces

Tried creating a link. This 

    M 0.18.3 jao@loon ~/Desktop$ ln -s "~/tufts/cs131/text/Stuart Russell, Peter Norvig - Artificial Intelligence_ A Modern Approach (4th Edition) (Pearson Series in Artifical Intelligence)-Language_ English (2020).pdf" AI.pdf

creates a broken link because the link target is not quoted.


More failures:

    M 0.18.3 jao@loon ~/Desktop$ ln -s ~/tufts/cs131/text/Stuart\ Russell,\ Peter\ Norvig\ -\ Artificial\ Intelligence_\ A\ Modern\ Approach\ (4th\ Edition)\ (Pearson\ Series\ in\ Artifical\ Intelligence)-Language_\ English\ (2020).pdf AI.pdf

Invalid function syntax: f'''~/tufts/cs131/text/Stuart Russell, Peter Norvig - Artificial Intelligence_ A Modern Approach {4th\ Edition} {Pearson\ Series\ in\ Artifical\ Intelligence}-Language_ English {2020}.pdf'''

    M 0.18.3 jao@loon ~/Desktop$ ln -s ~/tufts/cs131/text/Stuart\ Russell,\ Peter\ Norvig\ -\ Artificial\ Intelligence_\ A\ Modern\ Approach\ \(4th\ Edition\)\ \(Pearson\ Series\ in\ Artifical\ Intelligence\)-Language_\ English\ (2020).pdf AI.pdf

    Error: ["/bin/bash: -c: line 1: syntax error near unexpected token `('"]
    Error: ["/bin/bash: -c: line 1: `ln -s ~/tufts/cs131/text/Stuart Russell, Peter Norvig - Artificial Intelligence_ A Modern Approach (4th Edition) (Pearson Series in Artifical Intelligence)-Language_ English 2020.pdf AI.pdf'"]

This works:

    ln -s ~/tufts/cs131/text/Stuart\ Russell,\ Peter\ Norvig\ -\ Artificial\ Intelligence_\ A\ Modern\ Approach\ \(4th\ Edition\)\ \(Pearson\ Series\ in\ Artifical\ Intelligence\)-Language_\ English\ \(2020\).pdf AI.pdf

and in bash the target is single quoted. In marcel, the single quotes are not visible.

----------------------------------------------------------------------

218. cd done by sudo doesn't work. Should it?

M 0.18.3 jao@loon /media/backup$ sudo (| cd daily |)
M 0.18.3 jao@loon /media/backup$ pwd
drwxr-xr-x   root   root       4096   2019 May 12 10:55:54   /media/backup


----------------------------------------------------------------------

219. Killing command that spawns a python process doesn't kill the process

Run a python http server:

    M 0.18.3 jao@loon ~$ bash python3 -m http.server 8000
    Error: ['127.0.0.1 - - [10/Oct/2023 11:31:41] "GET / HTTP/1.1" 200 -']
    Error: ['127.0.0.1 - - [10/Oct/2023 11:31:47] "GET /cats.txt HTTP/1.1" 200 -']
    ...

Kill the command:

    ^C

The process is still there (pid 22110)

    M 0.18.3 jao@loon ~$ ps -c python
       972       1  root      sleeping    /usr/bin/python3 /usr/bin/networkd-dispatcher --run-startup-triggers
       990       1  root      sleeping    /usr/bin/python3 /usr/lib/system76-driver/system76-daemon
      1156     965  root      sleeping    /usr/bin/python3 /usr/sbin/execsnoop-bpfcc
      2874    2646  jao       sleeping    /usr/bin/python3 /usr/lib/hidpi-daemon/hidpi-daemon
      2934    2646  jao       sleeping    /usr/bin/python3 /usr/lib/hidpi-daemon/hidpi-notification
      2947    2646  jao       sleeping    /usr/bin/python3 /usr/lib/system76-driver/system76-user-daemon
      3087       1  root      sleeping    /usr/bin/python3 /usr/lib/pop-transition/service.py
     21883    2377  jao       sleeping    /usr/bin/python3 /usr/bin/gnome-terminal --wait
     21923   21922  jao       sleeping    python3 -m marcel.main
     22110    2377  jao       sleeping    python3 -m http.server 8000
     22180   21923  jao       running     python3 -m marcel.main

Explicitly kill the process:

    M 0.18.3 jao@loon ~$ ps -p 22110 | (p: p.signal(9))
    None
    M 0.18.3 jao@loon ~$ ps -c python
       972       1  root      sleeping    /usr/bin/python3 /usr/bin/networkd-dispatcher --run-startup-triggers
       990       1  root      sleeping    /usr/bin/python3 /usr/lib/system76-driver/system76-daemon
      1156     965  root      sleeping    /usr/bin/python3 /usr/sbin/execsnoop-bpfcc
      2874    2646  jao       sleeping    /usr/bin/python3 /usr/lib/hidpi-daemon/hidpi-daemon
      2934    2646  jao       sleeping    /usr/bin/python3 /usr/lib/hidpi-daemon/hidpi-notification
      2947    2646  jao       sleeping    /usr/bin/python3 /usr/lib/system76-driver/system76-user-daemon
      3087       1  root      sleeping    /usr/bin/python3 /usr/lib/pop-transition/service.py
     21883    2377  jao       sleeping    /usr/bin/python3 /usr/bin/gnome-terminal --wait
     21923   21922  jao       sleeping    python3 -m marcel.main
     22184   21923  jao       running     python3 -m marcel.main
    M 0.18.3 jao@loon ~$ 

----------------------------------------------------------------------

220. assign is handled inconsistently

This:

    assign x ... 

works like this:

    x = ...

but doesn't have help. Make it a complete op or make it hidden.

----------------------------------------------------------------------

221. Marcel ls differs from bash ls glob handling

See https://github.com/geophile/marcel/issues/20

----------------------------------------------------------------------

226. args (| *x: ... |) should probably be illegal

Not sure what it would mean.

M 0.18.3 jao@loon ~$ gen 100 | args (| *x: (x) |)
Error: Running map(lambda: x): name 'x' is not defined
Error: Running map(lambda: x): name 'x' is not defined

----------------------------------------------------------------------

228. marcel exit can lose history

If there are concurrent sessions, the LAST one to exit overwrites
changes from the others.  bash gets it right.

On exit, should reread history on disk and then append to it.

----------------------------------------------------------------------

233. args -a producing wrapped lists?

M 0.20.0 jao@loon ~/tufts/cs131/assignments/a5$ gen 5 | (x: [x] * 4) | args -a (| t: (list(zip(t))) |) | expand | write -c
"[0, 0, 0, 0]"
"[1, 1, 1, 1]"
"[2, 2, 2, 2]"
"[3, 3, 3, 3]"
"[4, 4, 4, 4]"

The problem is that write gets 1-tuples containing lists, not lists.

----------------------------------------------------------------------

240. Syntax error in startup.py crashes marcel

M 0.21.2 jao@loon ~/hacks/jeffrey$ ws jeffrey
Workspace(jeffrey)
Traceback (most recent call last):
  File "/usr/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/usr/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/home/jao/git/marcel/marcel/main.py", line 367, in <module>
    main()
  File "/home/jao/git/marcel/marcel/main.py", line 360, in main
    main_interactive_run()
  File "/home/jao/git/marcel/marcel/main.py", line 329, in main_interactive_run
    main = MainInteractive(main, env, workspace)
  File "/home/jao/git/marcel/marcel/main.py", line 199, in __init__
    super().__init__(env, workspace, testing)
  File "/home/jao/git/marcel/marcel/main.py", line 109, in __init__
    startup_vars = self.read_config()
  File "/home/jao/git/marcel/marcel/main.py", line 121, in read_config
    self.env.read_config()
  File "/home/jao/git/marcel/marcel/env.py", line 471, in read_config
    exec(config_source, self.namespace, locals)
  File "<string>", line 118
    return f'{eval(line[:colon)},{float(line[r:r_end])},{float(line[b:b_end])},{float(line[g:g_end])}'
                                                                                                      ^
SyntaxError: f-string: closing parenthesis ')' does not match opening parenthesis '['

----------------------------------------------------------------------

248. Script vs. interactive ws use

Ws in use interactively. Should that block script use? Script doesn't
record history, does it?

----------------------------------------------------------------------

269. Error causes exit of workspace

M 0.30.2 hw3 jao@loon $ data | (*x: race(x)) | unique
Error during execution of startup script of workspace hw3
Trying default workspace ...
data is not executable.

Probably due to syntax error in startup.py (added function).

----------------------------------------------------------------------

273. edit isn't working

edited line not echoed

----------------------------------------------------------------------

274. Tab completion of directory not working

cd ~/Music
ls iT<tab>

->

ls iTunes/

ls iTunes/<tab>

select iTunes Music ->

ls iTunes/iTunes\ Music/

-> error message:

No qualifying paths, (possibly due to permission errors): ['iTunes/iTunes\\ Music/']

----------------------------------------------------------------------

275. Tab completion of "filename doesn't work

E.g.

M 0.31.1 jao@loon ~$ ls "wallpaper/
Traceback (most recent call last):
  File "/usr/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/usr/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/home/jao/git/marcel/marcel/main.py", line 586, in <module>
    main()
  File "/home/jao/git/marcel/marcel/main.py", line 574, in main
    main_interactive_run(locations, workspace)
  File "/home/jao/git/marcel/marcel/main.py", line 509, in main_interactive_run
    main.run()
  File "/home/jao/git/marcel/marcel/main.py", line 356, in run
    self.parse_and_run_command(self.input)
  File "/home/jao/git/marcel/marcel/main.py", line 216, in parse_and_run_command
    pipeline = parser.parse()
  File "/home/jao/git/marcel/marcel/parser.py", line 1022, in parse
    return self.command()
  File "/home/jao/git/marcel/marcel/parser.py", line 1043, in command
    command = self.pipeline()
  File "/home/jao/git/marcel/marcel/parser.py", line 1129, in pipeline
    pipeline_op_sequence())
  File "/home/jao/git/marcel/marcel/parser.py", line 1107, in pipeline_op_sequence
    op_sequence = self.op_sequence()
  File "/home/jao/git/marcel/marcel/parser.py", line 1146, in op_sequence
    op_args = [self.op_args()]
  File "/home/jao/git/marcel/marcel/parser.py", line 1164, in op_args
    arg_token = self.arg()
  File "/home/jao/git/marcel/marcel/parser.py", line 1217, in arg
    raise marcel.exception.MissingQuoteException(arg.unterminated_quote, arg.value())
marcel.exception.MissingQuoteException: ('"', 'wallpaper/')
jao@loon:~$ 


----------------------------------------------------------------------

276. Tab completion of ~/... doesn't work

    ls ~/Mu<tab>

->

    ls ~/Music<space>

But:

    ls Mu<tab>

->

    ls Music/

Second is correct, first is not.

----------------------------------------------------------------------

277. Tab completion sometimes coming up empty

In ~/Music/ITunes/iTunes Music

ls The\ Zombies/<tab>

-> no candidates
