#!/bin/bash

export TEST_DIR=/home/jao/git/marcel/test/system/test_migration
export TEST_HOME=/tmp/test_home
export ACTUAL=/tmp/test_actual
export EXPECTED=$TEST_DIR/expected028
export XDG_CONFIG_HOME=$TEST_HOME/.config
export XDG_DATA_HOME=$TEST_HOME/.local/share

FAILURES=$((0))

normalize() {
  mv $1 $1.tmp
  marcel <<EOF
  read $1.tmp \
  | head -1 \
  | (f: f[len('$TEST_HOME/'):]) \
  | sort \
  > $1
EOF
  rm $1.tmp
}

list_config_and_data() {
  # Don't use marcel for the listing, because running marcel can
  # change what's in the directories being examined.
  find $TEST_HOME > $ACTUAL/$1
  normalize $ACTUAL/$1
}

check() {
  diff $EXPECTED/$1 $ACTUAL/$1 > /dev/null
  if [ $? != '0' ]; then
    FAILURES=$(($FAILURES+1))
    echo "Error on $1"
  fi
}

test_before_install() {
  echo $FUNCNAME
  list_config_and_data before_install
  check before_install
}

test_after_install() {
  echo $FUNCNAME
  marcel <<EOF
EOF
  list_config_and_data after_install
  check after_install
}

test_create_workspace() {
  echo $FUNCNAME
  marcel <<EOF
  ws -n $1 | select (x: False)
  gen 3 >$ g3
EOF
  list_config_and_data ws_create_w
  check ws_create_w
}

test_use_workspace() {
  echo $FUNCNAME
  marcel $1 <<EOF
  bash "find $TEST_HOME" \
  | case (f: '.WORKSPACE.' in f) (| (f: f[:f.rfind('/')] + '/.WORKSPACE.<pid>') |) \
                                 (| (f: f) |) \
  > $ACTUAL/ws_use_w 
EOF
  normalize $ACTUAL/ws_use_w
  check ws_use_w
}

test_delete_workspace() {
  echo $FUNCNAME
  marcel <<EOF
  ws -d $1
EOF
  list_config_and_data ws_delete_w
  check ws_delete_w
}

# ---------------------------------------------------------------

export TEST_DIR=/home/jao/git/marcel/test/system/test_migration
export TEST_HOME=/tmp/test_home
export TEST_ARTIFACTS=/tmp/test_artifacts
export WS2=$TEST_DIR/
export XDG_CONFIG_HOME=$TEST_HOME/.config
export XDG_DATA_HOME=$TEST_HOME/.local/share

FAILURES=$((0))

initialize() {
  sudo rm -rf $TEST_HOME >& /dev/null
  sudo rm -rf $TEST_ARTIFACTS
  mkdir -p $TEST_ARTIFACTS
}

test_ws2_to_ws3() {
  cp -rp $TEST_DIR/ws2 $TEST_HOME
  marcel <<EOF
EOF
  find $TEST_HOME > $TEST_ARTIFACTS/ws3
}

main() {
  initialize
  test_ws2_to_ws3
  echo "$FAILURES failures: $0"
}

main
